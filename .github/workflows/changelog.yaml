name: Bump changelog before release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to be released"
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  default-python: "3.12"
  minimum-supported-python: "3.9"

jobs:
  bump-changelog:
    name: Bump changelog
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.default-python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.default-python }}
          cache: pip



      - name: Set release version and PR branch
        run: |
          echo "RELEASE_VERSION=${{ inputs.version }}" >> $GITHUB_ENV
          echo "PR_BRANCH=release-${{ inputs.version }}" >> $GITHUB_ENV

      - name: Create PR branch
        run: git switch -c "$PR_BRANCH"
      - name: Install nox
        run: python -m pip install nox
      - name: Bump changelog and version
        run: |
          nox --error-on-missing-interpreters --non-interactive --session build_changelog -- "$RELEASE_VERSION"
          nox --error-on-missing-interpreters --non-interactive --session build_version -- "$RELEASE_VERSION"
      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "chore(release): $RELEASE_VERSION"
          git push origin "$PR_BRANCH"

      - name: Create pull request
        run: |
          gh pr create \
            --title "chore(release): $RELEASE_VERSION" \
            --body "This PR prepares the $RELEASE_VERSION release:\n\n- Bumps version in \`pyproject.toml\`\n- Generates changelog\n\nLabel: \`release-version\`" \
            --base main \
            --head "$PR_BRANCH" \
            --label release-version
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Release

on:
  pull_request_target:
    types: [closed]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  default-python: "3.12"
  minimum-supported-python: "3.9"

jobs:
  create-tag:
    name: Create the Git tag
    if: >
      github.event.pull_request.merged == true &&
      contains(github.event.pull_request.labels.*.name, 'release-version')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      release-tag: ${{ steps.get-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Extract version from PR title
        id: get-version
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          VERSION="${PR_TITLE##*: }"
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"

      - name: Create Git tag
        uses: mathieudutour/github-tag-action@v6.2
        with:
          custom_tag: "${{ steps.get-version.outputs.version }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: ""

      - name: Move v1 tag to latest release
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git fetch origin
          git tag -f v1 "${{ steps.get-version.outputs.version }}"
          git push origin -f v1

  create-release:
    name: Create GitHub Release
    needs: [create-tag]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          tag_name: "${{ needs.create-tag.outputs.release-tag }}"
